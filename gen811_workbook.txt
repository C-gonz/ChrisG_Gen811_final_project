5-11-20 (post-BLAST analyses and results compiling)
- Used the .out blast results appended grep searches to ID the number of hits with "Metabotropic," “taste," and “vomeronasal," key terms; these made Table 1 in the final paper.

- wrote a script ("top_hits.sh") to isolate the top 2 bit-score hits for each mouse T1R sequence for every database. See scripts file for full bash script.

- Used the results from top_hits.sh to format a table in Pages for the final paper, Fig. 1.

- Copied all accession numbers for the 3 mouse T1R proteins and top 2 BLASTp hit proteins:
nano all_accessions.txt
sort all_accessions.txt | uniq >> unique_accessions.txt 
- These accessions were then used on Batch Web CD-Search Tool <https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi?> to identify protein domains. These domains were then saved in concise format to the file "concise_WebCD_results.txt"

- Prepared for MAFFT alignments:
	- Used NCBI Batch Entrez <https://www.ncbi.nlm.nih.gov/sites/batchentrez> to pull sequences from the unique accession numbers provided by unique_accessions.txt, and saved them all in "unique_seqs.fasta"  
	- For convenient reading, I edited the FASTA headers as follows:
		- T1R1, etc. for any long-form descriptions of these proteins
		- metabotropic glutamate receptor --> MGR
		- extracellular calcium-sensing receptor --> ECsR
	- I added a number of "outgroup" FASTA sequences to unique_accessions.txt, as assessed by phylogenetic work published in Fredriksson et. al., 2003. These are as follows:
>AAC51174.1 frizzled homolog [Homo sapiens]
>NP_524812.1 frizzled, isoform A [Drosophila melanogaster]
>NP_789787.5 taste receptor type 2 member 38 [Homo sapiens]
>NP_795370.2 taste receptor type 2 member 20 [Homo sapiens]
>NP_062545.1 taste receptor type 2 member 1 [Homo sapiens]
>XP_005247894.1 extracellular calcium-sensing receptor isoform X2 [Homo sapiens]
>XP_006713852.1 extracellular calcium-sensing receptor isoform X1 [Homo sapiens]
	- NOTE: found later on that some seqs, despite havign different accession numbers, were identical. These are denoted in final paper Fig. 1; duplicate seqs with different accession numbers were thus manually removed from "unique_seqs.fasta." 
	- aligned seqs: 
		mafft --auto unique_seqs.fasta > unique_seqs_mafft.fasta
			- auto program chose L-INS-i method
			- output generated to stdout was copied into "unique_seqs_mafft.out"

- Ran iqTree Maximum Liklihood phylogeny:
	iqtree -m TEST -bb 1000 -alrt 1000 -s unique_seqs_mafft.fasta
	- IQtree identified that MGR_isoform_B_D.melanogaster and MGR_isoform_A_D.melanogaster are identical seqs; B was thus removed and the alignment + tree was redone.
	- Tree from unique_seqs_mafft.fasta.treefile is below; formatting for the final paper was done in FigTree V1.4.4.



5-9-20 (final blast script)
- See "db_and_blastp.slurm" in the "scripts" file within this repository for full script content. Revision notes are as follows:
	1. Made each blast.out file be sorted according to e-value
	2. Removed commands for additional sorted file containing unique chemoreceptor terms (deemed this file 
           ultimately reundant; uniq technically removes valid hits, and grep+sort can be used 
	   if needed on command line.)
- This script was designed in part with aid from various websites and example BLAST scripts from Dr. Dave Plachetzki.


5-8-20 (revising BLASTp script)
- I wanted to improve the efficiceny of the blasting process and include additional informative text handling.

- Summary of current script tasks:
Make a for loop that accomplishes the following:
	1. make blast databases (suffix = gz_db.*) for all sequences in current directory that end in .gz
	2. Use BLASTp on each database, with the 3 mouse T1Rs as the query. Output files end in .out
	3. Append to each output file the number of unique hits, and the number of unique hits containing "taste", "metabotropic", or "vomeronasal" terms in the title.
	4. Append the full title name for all unique hits containing any of the above terms into one summary file ("unique_GPCR_seqs.txt") 

CURRENT VERSION:
## For loop to run through each gzip fasta file, make a BLAST database from it, then blast a set query against each database. 
for item in ./*.gz
do
    ## make the blast database from the mus_musculus genome-based protein dataset 
    gzip -dc $item | makeblastdb -out ${item%.*}_db -dbtype prot -title $item

    ## blastp the 3 mus_musculus T1Rs against each species' BLAST database  
    blastp -db ${item%.*}_db -query mus_musculus_T1Rs.fas -evalue 1e-05 -num_threads 24 -out ${item%.*}.out -outfmt '6 qseqid qlen length pident gaps evalue stitle'

    ## Identify the total number of unique query seqs with significant hits, and those with selected key
    ## terms in their title. Append all counts to each blast output file, and use grep to ID & append GPCR seq titles
    ## & their e-values to one file.
    unique_seqs=$(cut -f 7 ${item%.*}.out | sort | uniq | wc -l)

    taste_seqs=$(cut -f 7 ${item%.}.out | sort | uniq | grep -i "taste" | wc -l)
    (cut -f 6,7 ${item%.*}.out | sort | uniq | grep -i "taste") >> unique_GPCR_seqs.txt

    metabotropic_seqs=$(cut -f 7 ${item%.}.out | sort | uniq | grep -i "metabotropic" | wc -l)
    (cut -f 6,7 ${item%.*}.out | sort | uniq | grep -i "metabotropic") >> unique_GPCR_seqs.txt

    vomeronasal_seqs=$(cut -f 7 ${item%.}.out | sort | uniq | grep -i "vomeronasal" | wc -l)
    (cut -f 6,7 ${item%.*}.out | sort | uniq | grep -i "vomeronasal") >> unique_GPCR_seqs.txt

    ## echo statements to record the significant hit seqs in the blast output file and the T1Rs_blastp.output file.
    echo There are $unique_seqs unique query sequences with significant hits $metabotropic_seqs contain the term metabotropic $taste_seqs contain taste and $vomeronasal_seqs contain vomeronasal >> ${item%.*}.out
    echo In ${item%.}.out there are $unique_seqs unique query sequences with significant hits $metabotropic_seqs contain the term metabotropic $taste_seqs contain taste and $vomeronasal_seqs contain vomeronasal
    echo Database creation and BLASTp query for $item is complete
done




5-6+7-20 (Rationale for and creating the BLAST database + running BLASTp)
- I was not sure if I should make the mouse T1Rs the BLAST database or the query; since we want to examine protein hits from each species of interest, I decided it made most sense to use the mouse T1Rs as the BLAST database and the genome-based protein datasets as BLAST queries.

- REVISION: I found that resulting query seqs are only given in accession / ID number, while the database hits have the -stitle option. After reviewing -outfmt options via the user manual, I've conluded I can most easily get seq annotation info by making each species' protein datasets a BLAST database, then querying these with the 3 T1R mouse seqs.

- Still looking for actual citation support, but a common basic e-value for homology ID is 1e-05.

First I decided to set up a script pipeline and test it by using the mouse T1Rs to query the mouse proteins dataset. The following commands were written in the SLURM script "db_and_blastp.slurm":

## make the blast database from the mus_musculus genome-based protein dataset 
gzip -dc GCF_000001635.26_GRCm38.p6_protein.faa.gz | makeblastdb -out mouse -dbtype prot -title GCF_000001635.26_GRCm38.p6_protein.faa

## blastp the 3 mus_musculus T1Rs against each species' BLAST database  
blastp -db mouse -query mus_musculus_T1Rs.fas -evalue 1e-05 -num_threads 24 -out mouse_blastp.out -outfmt '6 qseqid qlen length pident gaps evalue stitle'

## Identify the total number of unique query seqs with significant hits, and those with selected key 
## terms in their title. Append all counts to each blast output file.
unique_seqs=$(cut -f 7 mouse_blastp.out | sort | uniq | wc -l)
taste_seqs=$(cut -f 7 mouse_blastp.out | sort | uniq | grep -i "taste" | wc -l)
metabotropic_seqs=$(cut -f 7 mouse_blastp.out | sort | uniq | grep -i "metabotropic" | wc -l)
vomeronasal_seqs=$(cut -f 7 mouse_blastp.out | sort | uniq | grep -i "vomeronasal" | wc -l)

echo There are $unique_seqs unique query sequences with significant hits $metabotropic_seqs contain the term metabotropic $taste_seqs contain taste and vomeronasal_seqs contain vomeronasal >> mouse_blastp.out

This resulted in 275 significant mouse protein hits; of these, 4 had the term "taste" in their title, while 41 had the term "metabotropic".



5-2-20   (the Mus musculus T1Rs used as query proteins)
>NP_114073.1 taste receptor type 1 member 1 precursor [Mus musculus]
>NP_114079.1 taste receptor type 1 member 2 precursor [Mus musculus]
>NP_114078.1 taste receptor type 1 member 3 precursor [Mus musculus]



5-2-20   (obtaining genome-derived protein datasets via wget)
command used to obtain public preotien datasets for my T1R analyses:
wget <ftp link for dataset>

ftp links used to obtain 5 reference genomes

Reference Purple sea urchin (Strongylocentrotus purpuratus) genome-derived proteins: 
https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/235/GCF_000002235.5_Spur_5.0/GCF_000002235.5_Spur_5.0_protein.faa.gz

Reference House mouse (Mus Musculus) genome-derived proteins:
https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/635/GCF_000001635.26_GRCm38.p6/GCF_000001635.26_GRCm38.p6_protein.faa.gz

Reference Zebrafish (Danio rerio) genome-derived proteins:
https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/035/GCF_000002035.6_GRCz11/GCF_000002035.6_GRCz11_protein.faa.gz

Reference Fruit fly (Drosophila melanogaster) genome-derived proteins:
https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/215/GCF_000001215.4_Release_6_plus_ISO1_MT/GCF_000001215.4_Release_6_plus_ISO1_MT_protein.faa.gz

Reference Cnidarian (Hydra vulgaris) genome-derived proteins:
https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/004/095/GCF_000004095.1_Hydra_RP_1.0/GCF_000004095.1_Hydra_RP_1.0_protein.faa.gz




4-26-20 AND 5-2-20 
(revised project plans; narrowed focus to just codign sequences assessed via genome-based protein datasets, and the 3 T1R's (in mammals at least, T2Rs have nearly 30 homologs and would be a bit too much for this.))

>What is the biological question you are trying to answer with this project?
	Taste Receptors (TRs) are a group of chemoreceptor proteins, which in mammals have been widely identified as key to taste sensation. TRs belong to the A class of GCPRs (a massive gene superfamily), and are further broken down into two families containing multiple T1R and T2R taste receptors, respectively.
	The identification and number of TRs is less known outside of Mammalia. The general sense I’ve seen in the literature is that they are found in numerous other vertebrate lineages, but not in protostomes. Given the known instances of gene duplication in vertebrates and the apparent lack of homologs in protostomes, I would like to investigate the following:
	1. What is the protein structure (coding sequences) of T1Rs amongst different deuterstome taxa? (Non-chordata vs chordata, and mammal vs non-mammal) 
	2. How many copies of T1Rs do these different taxa have? A quick lit review suggests mammals have 3, but how widespread is this?
	3. Are there any similar sequences or homologs in some protostomes? (Personal communications with Dave Plachetski suggests some cnidarians may have them).

>What software will you need to complete your analysis?
For reference genomes:
	- BLAST Suite (used to blast T1R homologs from Mus musculus in order to ID these genes in the other assemblies.)
	- MSA (MAFFT) (Compare motifs / domains and functional regions of genes identified

>What are your expected results? What do you hypothesize that you will find?
	Based in part on previously published knowledge, I tentatively expect that Mammals will have the largest number of Taste 1 Receptors; however, I should be able to identify them in any other chordate, as well as deuterostomes in general.
	In regard to Protostomes, I anticipate finding potentially similar sequences; whether they will be true homologs or (maybe?) structurally similar but unrelated remains to be seen.

>What are the steps (as far as you can tell) to your analysis?
	- Download all genome-derived datasets via wget
	- Download the 3 mammalian T1R homologs from Mus musculus
	- ID full genes of interest (T1Rs and similar sequences / homologs) from protein datasets
	- Not entirely sure of approach yet, but need to ID + annotate functional regions. I know SMART can do this....
	- Use MSA to compare gene sequences 
